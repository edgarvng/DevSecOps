name: DevSecOps-Test-AWS
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
 
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target
 
      - name: "Generaci√≥n de imagen de docker"
        run: |
          IMAGE_NAME="docker.io/my-organization/my-app:${{ github.sha }}"
          docker build -f Dockerfile -t $IMAGE_NAME .

      - name: "Configuracion de credenciales AWS"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.EDGARLABNOV2023AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.EDGARLABNOV2023AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1    

      - name: "Cargar imagen a ECR"
        run: |
          ECR_URL="public.ecr.aws/i3l4a3q5/edgarv"  
          IMAGE_NAME="docker.io/my-organization/my-app:${{ github.sha }}"
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_URL
          docker tag $IMAGE_NAME $ECR_URL/$IMAGE_NAME
          docker push $ECR_URL/$IMAGE_NAME
        env:
          ECR_URL: public.ecr.aws/i3l4a3q5/edgarv 

      - name: "Aprovisionamiento de Terraform"
        run: |
          terraform init
          terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.EDGARLABNOV2023AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.EDGARLABNOV2023AWS_SECRET_ACCESS_KEY }}

      - name: "Ejecutar ansible"

      