name: Docker Prueba Final

on:
  push:
    branches:
      - main

jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Obtener la última versión del código
        uses: actions/checkout@v3

      - name: Instalación Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Compilación
        run: ./mvnw clean install

      - name: Verificar paquete
        run: ls -ltra target

      - name: Instalación de Horusec
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta
          sudo mv /usr/local/bin/horusec /usr/bin/horusec
          horusec version

      - name: Instalación de jq
        run: sudo apt-get -y install jq

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: 'WebGoat'
          path: '.'
          format: 'SARIF'
          out: 'reports'

      - name: Verificar reporte
        run: ls -ltra reports

      - name: "Ejecutar Horusec"
        run: sudo horusec start -p="./" --return-error -e="false"

      - name: Generación de la imagen Docker
        run: |
          docker build -f Dockerfile . -t webgoat/test

      - name: Verificar imagen Docker
        run: |
          if docker images | grep -q "webgoat/test"; then
            echo "La imagen 'webgoat/test' existe."
          else
            echo "La imagen 'webgoat/test' no existe."
            exit 1
          fi

      - name: Instalar Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb

      - name: Escanear con Trivy
        run: |
          trivy webgoat/test

      - name: Crear contenedor Docker
        run: |
          docker run -d --name webgoat-container -p 8080:8080 webgoat/test

      - name: "Run Trivy vulnerability scanner"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'webgoat/test'
          timeout: 10m0s
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          scanners: vuln,secret,config
        continue-on-error: true

      - name: "Installing Arachni"
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz

      - name: Guardar y subir reporte Trivy
        run: |
          trivy --format json --output trivy-results.json webgoat/test
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add trivy-results.json
          git commit -m "Add Trivy scan results"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Subir archivo sarif
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-image-results.sarif
          category: image
          checkout_path: /home/runner/work/DevSecOps/DevSecOps
          token: ${{ secrets.GITHUB_TOKEN }}
          matrix: null
          wait-for-processing: true
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.9-9/x64
          JAVA_HOME_17_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.9-9/x64

      - name: Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/pwdemo/demo-scanning-spring-boot:${{ github.sha }}'
          format: 'SARIF'
          output: 'trivy-image-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
          category: 'image' 
